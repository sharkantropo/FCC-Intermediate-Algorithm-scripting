Given a positive integer num, return the sum of all odd Fibonacci numbers that are less than or equal to num.

The first two numbers in the Fibonacci sequence are 1 and 1. Every additional number in the sequence is the sum of the two previous numbers. The first six numbers of the Fibonacci sequence are 1, 1, 2, 3, 5 and 8.

For example, sumFibs(10) should return 10 because all odd Fibonacci numbers less than 10 are 1, 1, 3, and 5.

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SOLUTION!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

function sumFibs(num) {
  var ret=1,oddSum=2, cumulator= [], vin=1, sum;
  //First, we shall put all odd numbers into an array
  while(oddSum <= num)
  {   
         oddSum=vin+ret;
         vin=ret;
         ret=oddSum;
        if(oddSum%2 !==0)
          {
              cumulator.push(oddSum);
          }
  } 
  // The last value is larger than the argument number, so it goes out.
  cumulator.pop();
  
  //Now, just let's sum all the elements inside.
  sum = cumulator.reduce(function(a, b) {
  return a + b;
   }, 0);
  // And then add 2, which is equivalent to sum the first pair of 1.
  sum=sum+2;
  return sum;
}

sumFibs(4);
